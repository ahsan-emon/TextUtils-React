{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ahsan\\\\OneDrive\\\\Desktop\\\\Web Design\\\\React\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ahsan\\\\OneDrive\\\\Desktop\\\\Web Design\\\\React\\\\my-app\\\\src\\\\App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  var _useState = useState('light'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1]; // whether dark mode is enabled or not\n\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 1500);\n  };\n\n  var toggleMode = function toggleMode() {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\"); // document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\"); // document.title = 'TextUtils - Light Mode';\n    }\n  };\n\n  var redMode = function redMode() {\n    document.body.style.backgroundColor = 'red';\n    document.body.style.color = 'red';\n    showAlert(\"Red mode has been enabled\", \"success\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextUtils\",\n    mode: mode,\n    toggleMode: toggleMode,\n    redMode: redMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextForm, {\n    showAlert: showAlert,\n    heading: \"Enter the text to analyze below\",\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"names":["Navbar","About","TextForm","React","useState","Alert","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","redMode","color"],"sources":["C:/Users/ahsan/OneDrive/Desktop/Web Design/React/my-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  }\n  const redMode = () => {\n    document.body.style.backgroundColor = 'red';\n    document.body.style.color = 'red';\n    showAlert(\"Red mode has been enabled\", \"success\");\n  }\n\n  return (\n    <>\n    <Router>\n      \n      </Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} redMode={redMode} />\n      <Alert alert={alert} />\n      \n      <div className=\"container mt-3\">\n      \n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        </Route>\n      </Switch>\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}